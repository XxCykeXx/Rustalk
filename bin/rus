#!/usr/bin/env node

const { spawn } = require('child_process');
const { join, dirname } = require('path');
const { platform } = require('os');
const { existsSync } = require('fs');

// Determine the path to the rus binary
const currentPlatform = platform();
const scriptDir = dirname(__filename);
const binaryName = currentPlatform === 'win32' ? 'rus.exe' : 'rus';

// Try different locations for the binary
const possiblePaths = [
  join(scriptDir, binaryName),
  join(scriptDir, '..', 'target', 'release', binaryName),
  join(scriptDir, '..', 'bin', binaryName)
];

let binaryPath = null;
for (const path of possiblePaths) {
  if (existsSync(path)) {
    binaryPath = path;
    break;
  }
}

if (!binaryPath) {
  console.error('❌ Could not find rus binary. Please ensure it is built.');
  console.error('💡 Run: npm run build:rust');
  process.exit(1);
}

// Forward all arguments to the rust binary
const child = spawn(binaryPath, process.argv.slice(2), {
  stdio: 'inherit',
  shell: false
});

child.on('error', (error) => {
  console.error('❌ Error running rus:', error.message);
  process.exit(1);
});

child.on('exit', (code) => {
  process.exit(code || 0);
});